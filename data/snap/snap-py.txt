cd ~/freshlocalharvest/data/snap
python3 - <<'PY'
# Why: handle Windows-1252; keep logic resilient to header variants; produce clean UTF-8 output.

import csv, glob, io, re, sys

paths = glob.glob('snap_hist/**/*.csv', recursive=True) or glob.glob('snap_hist/*.csv')
if not paths:
    sys.exit("No CSV found in snap_hist/")
src = paths[0]

# Load bytes once; try encodings in order; last resort replaces bad bytes (don't crash).
raw = open(src, 'rb').read()
used = None
for enc in ('utf-8-sig','utf-8','cp1252','latin-1'):
    try:
        text = raw.decode(enc)
        used = enc
        break
    except UnicodeDecodeError:
        continue
if used is None:
    text = raw.decode('utf-8', errors='replace')
    used = 'utf-8?replace'

def norm(h): return h.strip().lower().replace(' ', '_')

rdr = csv.DictReader(io.StringIO(text))
orig_headers = rdr.fieldnames or []
hmap = {norm(h): h for h in orig_headers}

# Accept common variants; your file has "Store Type"
for candidate in ('store_type','retailer_type','type','storetype'):
    if candidate in hmap:
        store_col = hmap[candidate]
        break
else:
    sys.exit(f"No store-type field among: {orig_headers}")

# Match “Farmers Market”, “Farmer’s Market”, “Farmers’ Market”, etc.
pat = re.compile(r'\bfarm\w*\b.*\bmarket\w*\b', re.I)

out_path = 'snap_farmers_markets_historical.csv'
wrote = 0
with open(out_path, 'w', encoding='utf-8', newline='') as o:
    w = csv.DictWriter(o, fieldnames=orig_headers)
    w.writeheader()
    for row in rdr:
        v = (row.get(store_col) or '')
        if pat.search(v):
            w.writerow(row)
            wrote += 1

print(f"infile={src}")
print(f"detected_encoding={used}")
print(f"store_type_col={store_col}")
print(f"wrote_rows={wrote} -> {out_path}")
PY

wc -l snap_farmers_markets_historical.csv
head -5 snap_farmers_markets_historical.csv
